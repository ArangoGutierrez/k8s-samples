# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include:
  - local: '.common-ci.yml'

default:
  tags:
    - type/docker
    - cnt
    - container-dev
    - os/linux

stages:
  - build
  - test
  - scan
  - deploy
  - release

# The .scan step forms the base of the image scan operation performed before releasing
# images.
.scan:
  stage: scan
  variables:
    # Define both OUT_IMAGE and OUT_IMAGE_TAG to allow for these to be used when scanning the
    # "local" (tagged) image
    OUT_IMAGE_TAG: "${SAMPLE}-${DISTRIBUTION}-${CI_COMMIT_SHA}"
    OUT_IMAGE: "${IMAGE_NAME}"
  except:
    variables:
    - $CI_COMMIT_MESSAGE =~ /\[skip[ _-]scans?\]/i
    - $SKIP_SCANS
  before_script:
    - apk add --no-cache make bash
    - apk add --no-cache git
    - apk add --no-cache python3 python3-dev py3-pip py3-wheel libmagic
    # Pull the built image from the CI registry
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - make DISTRIBUTION=${DISTRIBUTION} pull
    # Tag the image as ${OUT_IMAGE}:${OUT_IMAGE_TAG} for scanning in contamer
    - make DISTRIBUTION=${DISTRIBUTION} tag
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab-master.nvidia.com/sectooling/scanning/contamer.git
    - pip3 install -r contamer/requirements.txt
  script:
    - cd contamer
    - python3 contamer.py -ls --fail-on-non-os ${CONTAMER_SUPPRESS_VULNS:+--suppress-vulns ${CONTAMER_SUPPRESS_VULNS}} -- "${OUT_IMAGE}:${OUT_IMAGE_TAG}"

scan-vectoradd-ubuntu18:
  extends:
    - .scan
    - .distribution-ubuntu18
    - .sample-vectoradd

scan-vectoradd-ubi8:
  extends:
    - .scan
    - .distribution-ubi8
    - .sample-vectoradd

scan-nbody-ubuntu18:
  extends:
    - .scan
    - .distribution-ubuntu18
    - .sample-nbody

# Define the external release steps for NGC and Dockerhub
.release:ngc:
  extends: .release:external
  variables:
    OUT_REGISTRY_USER: ${NGC_REGISTRY_USER}
    OUT_REGISTRY_TOKEN: ${NGC_REGISTRY_TOKEN}
    OUT_REGISTRY: ${NGC_REGISTRY}
    OUT_IMAGE: ${NGC_REGISTRY_IMAGE}

.release:dockerhub:
  extends: .release:external
  variables:
    OUT_REGISTRY_USER: ${REGISTRY_USER}
    OUT_REGISTRY_TOKEN: ${REGISTRY_TOKEN}
    OUT_REGISTRY: ${DOCKERHUB_REGISTRY}
    OUT_IMAGE: ${REGISTRY_IMAGE}

release:ngc-vectoradd-ubuntu18:
  extends:
    - .release:ngc
    - .distribution-ubuntu18
    - .sample-vectoradd
  dependencies:
    - deploy:ci-vectoradd-ubuntu18
    - scan-vectoradd-ubuntu18

release:ngc-vectoradd-ubi8:
  extends:
    - .release:ngc
    - .distribution-ubi8
    - .sample-vectoradd
  dependencies:
    - deploy:ci-vectoradd-ubi8
    - scan-vectoradd-ubi8

release:ngc-nbody-untagged:
  extends:
    - .release:ngc
    - .distribution-ubuntu18
    - .sample-nbody
    - .nbody-untagged
  dependencies:
    - deploy:ci-nbody-ubuntu18
    - scan-nbody-ubuntu18

release:dockerhub-vectoradd-ubuntu18:
  extends:
    - .release:ngc
    - .distribution-ubuntu18
    - .sample-vectoradd
  dependencies:
    - deploy:ci-vectoradd-ubuntu18
    - scan-vectoradd-ubuntu18

release:dockerhub-vectoradd-ubi8:
  extends:
    - .release:ngc
    - .distribution-ubi8
    - .sample-vectoradd
  dependencies:
    - deploy:ci-vectoradd-ubi8
    - scan-vectoradd-ubi8

release:dockerhub-nbody-untagged:
  extends:
    - .release:ngc
    - .distribution-ubuntu18
    - .sample-nbody
    - .nbody-untagged
  dependencies:
    - deploy:ci-nbody-ubuntu18
    - scan-nbody-ubuntu18
